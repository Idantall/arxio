/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/preact@10.24.3";
exports.ids = ["vendor-chunks/preact@10.24.3"];
exports.modules = {

/***/ "(rsc)/../../node_modules/.pnpm/preact@10.24.3/node_modules/preact/dist/preact.js":
/*!**********************************************************************************!*\
  !*** ../../node_modules/.pnpm/preact@10.24.3/node_modules/preact/dist/preact.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("var n, l, t, u, i, o, r, e, f, c, s, h, a = {}, p = [], v = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, y = Array.isArray;\nfunction d(n, l) {\n    for(var t in l)n[t] = l[t];\n    return n;\n}\nfunction w(n) {\n    n && n.parentNode && n.parentNode.removeChild(n);\n}\nfunction _(l, t, u) {\n    var i, o, r, e = {};\n    for(r in t)\"key\" == r ? i = t[r] : \"ref\" == r ? o = t[r] : e[r] = t[r];\n    if (arguments.length > 2 && (e.children = arguments.length > 3 ? n.call(arguments, 2) : u), \"function\" == typeof l && null != l.defaultProps) for(r in l.defaultProps)void 0 === e[r] && (e[r] = l.defaultProps[r]);\n    return g(l, e, i, o, null);\n}\nfunction g(n, u, i, o, r) {\n    var e = {\n        type: n,\n        props: u,\n        key: i,\n        ref: o,\n        __k: null,\n        __: null,\n        __b: 0,\n        __e: null,\n        __d: void 0,\n        __c: null,\n        constructor: void 0,\n        __v: null == r ? ++t : r,\n        __i: -1,\n        __u: 0\n    };\n    return null == r && null != l.vnode && l.vnode(e), e;\n}\nfunction x(n) {\n    return n.children;\n}\nfunction m(n, l) {\n    this.props = n, this.context = l;\n}\nfunction b(n, l) {\n    if (null == l) return n.__ ? b(n.__, n.__i + 1) : null;\n    for(var t; l < n.__k.length; l++)if (null != (t = n.__k[l]) && null != t.__e) return t.__e;\n    return \"function\" == typeof n.type ? b(n) : null;\n}\nfunction k(n) {\n    var l, t;\n    if (null != (n = n.__) && null != n.__c) {\n        for(n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++)if (null != (t = n.__k[l]) && null != t.__e) {\n            n.__e = n.__c.base = t.__e;\n            break;\n        }\n        return k(n);\n    }\n}\nfunction S(n) {\n    (!n.__d && (n.__d = !0) && i.push(n) && !C.__r++ || o !== l.debounceRendering) && ((o = l.debounceRendering) || r)(C);\n}\nfunction C() {\n    var n, t, u, o, r, f, c, s;\n    for(i.sort(e); n = i.shift();)n.__d && (t = i.length, o = void 0, f = (r = (u = n).__v).__e, c = [], s = [], u.__P && ((o = d({}, r)).__v = r.__v + 1, l.vnode && l.vnode(o), A(u.__P, o, r, u.__n, u.__P.namespaceURI, 32 & r.__u ? [\n        f\n    ] : null, c, null == f ? b(r) : f, !!(32 & r.__u), s), o.__v = r.__v, o.__.__k[o.__i] = o, F(c, o, s), o.__e != f && k(o)), i.length > t && i.sort(e));\n    C.__r = 0;\n}\nfunction M(n, l, t, u, i, o, r, e, f, c, s) {\n    var h, v, y, d, w, _ = u && u.__k || p, g = l.length;\n    for(t.__d = f, P(t, l, _), f = t.__d, h = 0; h < g; h++)null != (y = t.__k[h]) && (v = -1 === y.__i ? a : _[y.__i] || a, y.__i = h, A(n, y, v, i, o, r, e, f, c, s), d = y.__e, y.ref && v.ref != y.ref && (v.ref && j(v.ref, null, y), s.push(y.ref, y.__c || d, y)), null == w && null != d && (w = d), 65536 & y.__u || v.__k === y.__k ? f = $(y, f, n) : \"function\" == typeof y.type && void 0 !== y.__d ? f = y.__d : d && (f = d.nextSibling), y.__d = void 0, y.__u &= -196609);\n    t.__d = f, t.__e = w;\n}\nfunction P(n, l, t) {\n    var u, i, o, r, e, f = l.length, c = t.length, s = c, h = 0;\n    for(n.__k = [], u = 0; u < f; u++)null != (i = l[u]) && \"boolean\" != typeof i && \"function\" != typeof i ? (r = u + h, (i = n.__k[u] = \"string\" == typeof i || \"number\" == typeof i || \"bigint\" == typeof i || i.constructor == String ? g(null, i, null, null, null) : y(i) ? g(x, {\n        children: i\n    }, null, null, null) : void 0 === i.constructor && i.__b > 0 ? g(i.type, i.props, i.key, i.ref ? i.ref : null, i.__v) : i).__ = n, i.__b = n.__b + 1, o = null, -1 !== (e = i.__i = I(i, t, r, s)) && (s--, (o = t[e]) && (o.__u |= 131072)), null == o || null === o.__v ? (-1 == e && h--, \"function\" != typeof i.type && (i.__u |= 65536)) : e !== r && (e == r - 1 ? h-- : e == r + 1 ? h++ : (e > r ? h-- : h++, i.__u |= 65536))) : i = n.__k[u] = null;\n    if (s) for(u = 0; u < c; u++)null != (o = t[u]) && 0 == (131072 & o.__u) && (o.__e == n.__d && (n.__d = b(o)), z(o, o));\n}\nfunction $(n, l, t) {\n    var u, i;\n    if (\"function\" == typeof n.type) {\n        for(u = n.__k, i = 0; u && i < u.length; i++)u[i] && (u[i].__ = n, l = $(u[i], l, t));\n        return l;\n    }\n    n.__e != l && (l && n.type && !t.contains(l) && (l = b(n)), t.insertBefore(n.__e, l || null), l = n.__e);\n    do {\n        l = l && l.nextSibling;\n    }while (null != l && 8 === l.nodeType);\n    return l;\n}\nfunction I(n, l, t, u) {\n    var i = n.key, o = n.type, r = t - 1, e = t + 1, f = l[t];\n    if (null === f || f && i == f.key && o === f.type && 0 == (131072 & f.__u)) return t;\n    if (u > (null != f && 0 == (131072 & f.__u) ? 1 : 0)) for(; r >= 0 || e < l.length;){\n        if (r >= 0) {\n            if ((f = l[r]) && 0 == (131072 & f.__u) && i == f.key && o === f.type) return r;\n            r--;\n        }\n        if (e < l.length) {\n            if ((f = l[e]) && 0 == (131072 & f.__u) && i == f.key && o === f.type) return e;\n            e++;\n        }\n    }\n    return -1;\n}\nfunction H(n, l, t) {\n    \"-\" === l[0] ? n.setProperty(l, null == t ? \"\" : t) : n[l] = null == t ? \"\" : \"number\" != typeof t || v.test(l) ? t : t + \"px\";\n}\nfunction L(n, l, t, u, i) {\n    var o;\n    n: if (\"style\" === l) if (\"string\" == typeof t) n.style.cssText = t;\n    else {\n        if (\"string\" == typeof u && (n.style.cssText = u = \"\"), u) for(l in u)t && l in t || H(n.style, l, \"\");\n        if (t) for(l in t)u && t[l] === u[l] || H(n.style, l, t[l]);\n    }\n    else if (\"o\" === l[0] && \"n\" === l[1]) o = l !== (l = l.replace(/(PointerCapture)$|Capture$/i, \"$1\")), l = l.toLowerCase() in n || \"onFocusOut\" === l || \"onFocusIn\" === l ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + o] = t, t ? u ? t.t = u.t : (t.t = f, n.addEventListener(l, o ? s : c, o)) : n.removeEventListener(l, o ? s : c, o);\n    else {\n        if (\"http://www.w3.org/2000/svg\" == i) l = l.replace(/xlink(H|:h)/, \"h\").replace(/sName$/, \"s\");\n        else if (\"width\" != l && \"height\" != l && \"href\" != l && \"list\" != l && \"form\" != l && \"tabIndex\" != l && \"download\" != l && \"rowSpan\" != l && \"colSpan\" != l && \"role\" != l && \"popover\" != l && l in n) try {\n            n[l] = null == t ? \"\" : t;\n            break n;\n        } catch (n) {}\n        \"function\" == typeof t || (null == t || !1 === t && \"-\" !== l[4] ? n.removeAttribute(l) : n.setAttribute(l, \"popover\" == l && 1 == t ? \"\" : t));\n    }\n}\nfunction T(n) {\n    return function(t) {\n        if (this.l) {\n            var u = this.l[t.type + n];\n            if (null == t.u) t.u = f++;\n            else if (t.u < u.t) return;\n            return u(l.event ? l.event(t) : t);\n        }\n    };\n}\nfunction A(n, t, u, i, o, r, e, f, c, s) {\n    var h, a, p, v, w, _, g, b, k, S, C, P, $, I, H, L, T = t.type;\n    if (void 0 !== t.constructor) return null;\n    128 & u.__u && (c = !!(32 & u.__u), r = [\n        f = t.__e = u.__e\n    ]), (h = l.__b) && h(t);\n    n: if (\"function\" == typeof T) try {\n        if (b = t.props, k = \"prototype\" in T && T.prototype.render, S = (h = T.contextType) && i[h.__c], C = h ? S ? S.props.value : h.__ : i, u.__c ? g = (a = t.__c = u.__c).__ = a.__E : (k ? t.__c = a = new T(b, C) : (t.__c = a = new m(b, C), a.constructor = T, a.render = N), S && S.sub(a), a.props = b, a.state || (a.state = {}), a.context = C, a.__n = i, p = a.__d = !0, a.__h = [], a._sb = []), k && null == a.__s && (a.__s = a.state), k && null != T.getDerivedStateFromProps && (a.__s == a.state && (a.__s = d({}, a.__s)), d(a.__s, T.getDerivedStateFromProps(b, a.__s))), v = a.props, w = a.state, a.__v = t, p) k && null == T.getDerivedStateFromProps && null != a.componentWillMount && a.componentWillMount(), k && null != a.componentDidMount && a.__h.push(a.componentDidMount);\n        else {\n            if (k && null == T.getDerivedStateFromProps && b !== v && null != a.componentWillReceiveProps && a.componentWillReceiveProps(b, C), !a.__e && (null != a.shouldComponentUpdate && !1 === a.shouldComponentUpdate(b, a.__s, C) || t.__v === u.__v)) {\n                for(t.__v !== u.__v && (a.props = b, a.state = a.__s, a.__d = !1), t.__e = u.__e, t.__k = u.__k, t.__k.some(function(n) {\n                    n && (n.__ = t);\n                }), P = 0; P < a._sb.length; P++)a.__h.push(a._sb[P]);\n                a._sb = [], a.__h.length && e.push(a);\n                break n;\n            }\n            null != a.componentWillUpdate && a.componentWillUpdate(b, a.__s, C), k && null != a.componentDidUpdate && a.__h.push(function() {\n                a.componentDidUpdate(v, w, _);\n            });\n        }\n        if (a.context = C, a.props = b, a.__P = n, a.__e = !1, $ = l.__r, I = 0, k) {\n            for(a.state = a.__s, a.__d = !1, $ && $(t), h = a.render(a.props, a.state, a.context), H = 0; H < a._sb.length; H++)a.__h.push(a._sb[H]);\n            a._sb = [];\n        } else do {\n            a.__d = !1, $ && $(t), h = a.render(a.props, a.state, a.context), a.state = a.__s;\n        }while (a.__d && ++I < 25);\n        a.state = a.__s, null != a.getChildContext && (i = d(d({}, i), a.getChildContext())), k && !p && null != a.getSnapshotBeforeUpdate && (_ = a.getSnapshotBeforeUpdate(v, w)), M(n, y(L = null != h && h.type === x && null == h.key ? h.props.children : h) ? L : [\n            L\n        ], t, u, i, o, r, e, f, c, s), a.base = t.__e, t.__u &= -161, a.__h.length && e.push(a), g && (a.__E = a.__ = null);\n    } catch (n) {\n        if (t.__v = null, c || null != r) {\n            for(t.__u |= c ? 160 : 128; f && 8 === f.nodeType && f.nextSibling;)f = f.nextSibling;\n            r[r.indexOf(f)] = null, t.__e = f;\n        } else t.__e = u.__e, t.__k = u.__k;\n        l.__e(n, t, u);\n    }\n    else null == r && t.__v === u.__v ? (t.__k = u.__k, t.__e = u.__e) : t.__e = O(u.__e, t, u, i, o, r, e, c, s);\n    (h = l.diffed) && h(t);\n}\nfunction F(n, t, u) {\n    t.__d = void 0;\n    for(var i = 0; i < u.length; i++)j(u[i], u[++i], u[++i]);\n    l.__c && l.__c(t, n), n.some(function(t) {\n        try {\n            n = t.__h, t.__h = [], n.some(function(n) {\n                n.call(t);\n            });\n        } catch (n) {\n            l.__e(n, t.__v);\n        }\n    });\n}\nfunction O(t, u, i, o, r, e, f, c, s) {\n    var h, p, v, d, _, g, x, m = i.props, k = u.props, S = u.type;\n    if (\"svg\" === S ? r = \"http://www.w3.org/2000/svg\" : \"math\" === S ? r = \"http://www.w3.org/1998/Math/MathML\" : r || (r = \"http://www.w3.org/1999/xhtml\"), null != e) {\n        for(h = 0; h < e.length; h++)if ((_ = e[h]) && \"setAttribute\" in _ == !!S && (S ? _.localName === S : 3 === _.nodeType)) {\n            t = _, e[h] = null;\n            break;\n        }\n    }\n    if (null == t) {\n        if (null === S) return document.createTextNode(k);\n        t = document.createElementNS(r, S, k.is && k), c && (l.__m && l.__m(u, e), c = !1), e = null;\n    }\n    if (null === S) m === k || c && t.data === k || (t.data = k);\n    else {\n        if (e = e && n.call(t.childNodes), m = i.props || a, !c && null != e) for(m = {}, h = 0; h < t.attributes.length; h++)m[(_ = t.attributes[h]).name] = _.value;\n        for(h in m)if (_ = m[h], \"children\" == h) ;\n        else if (\"dangerouslySetInnerHTML\" == h) v = _;\n        else if (!(h in k)) {\n            if (\"value\" == h && \"defaultValue\" in k || \"checked\" == h && \"defaultChecked\" in k) continue;\n            L(t, h, null, _, r);\n        }\n        for(h in k)_ = k[h], \"children\" == h ? d = _ : \"dangerouslySetInnerHTML\" == h ? p = _ : \"value\" == h ? g = _ : \"checked\" == h ? x = _ : c && \"function\" != typeof _ || m[h] === _ || L(t, h, _, m[h], r);\n        if (p) c || v && (p.__html === v.__html || p.__html === t.innerHTML) || (t.innerHTML = p.__html), u.__k = [];\n        else if (v && (t.innerHTML = \"\"), M(t, y(d) ? d : [\n            d\n        ], u, i, o, \"foreignObject\" === S ? \"http://www.w3.org/1999/xhtml\" : r, e, f, e ? e[0] : i.__k && b(i, 0), c, s), null != e) for(h = e.length; h--;)w(e[h]);\n        c || (h = \"value\", \"progress\" === S && null == g ? t.removeAttribute(\"value\") : void 0 !== g && (g !== t[h] || \"progress\" === S && !g || \"option\" === S && g !== m[h]) && L(t, h, g, m[h], r), h = \"checked\", void 0 !== x && x !== t[h] && L(t, h, x, m[h], r));\n    }\n    return t;\n}\nfunction j(n, t, u) {\n    try {\n        if (\"function\" == typeof n) {\n            var i = \"function\" == typeof n.__u;\n            i && n.__u(), i && null == t || (n.__u = n(t));\n        } else n.current = t;\n    } catch (n) {\n        l.__e(n, u);\n    }\n}\nfunction z(n, t, u) {\n    var i, o;\n    if (l.unmount && l.unmount(n), (i = n.ref) && (i.current && i.current !== n.__e || j(i, null, t)), null != (i = n.__c)) {\n        if (i.componentWillUnmount) try {\n            i.componentWillUnmount();\n        } catch (n) {\n            l.__e(n, t);\n        }\n        i.base = i.__P = null;\n    }\n    if (i = n.__k) for(o = 0; o < i.length; o++)i[o] && z(i[o], t, u || \"function\" != typeof n.type);\n    u || w(n.__e), n.__c = n.__ = n.__e = n.__d = void 0;\n}\nfunction N(n, l, t) {\n    return this.constructor(n, t);\n}\nfunction V(t, u, i) {\n    var o, r, e, f;\n    l.__ && l.__(t, u), r = (o = \"function\" == typeof i) ? null : i && i.__k || u.__k, e = [], f = [], A(u, t = (!o && i || u).__k = _(x, null, [\n        t\n    ]), r || a, a, u.namespaceURI, !o && i ? [\n        i\n    ] : r ? null : u.firstChild ? n.call(u.childNodes) : null, e, !o && i ? i : r ? r.__e : u.firstChild, o, f), F(e, t, f);\n}\nn = p.slice, l = {\n    __e: function(n, l, t, u) {\n        for(var i, o, r; l = l.__;)if ((i = l.__c) && !i.__) try {\n            if ((o = i.constructor) && null != o.getDerivedStateFromError && (i.setState(o.getDerivedStateFromError(n)), r = i.__d), null != i.componentDidCatch && (i.componentDidCatch(n, u || {}), r = i.__d), r) return i.__E = i;\n        } catch (l) {\n            n = l;\n        }\n        throw n;\n    }\n}, t = 0, u = function(n) {\n    return null != n && null == n.constructor;\n}, m.prototype.setState = function(n, l) {\n    var t;\n    t = null != this.__s && this.__s !== this.state ? this.__s : this.__s = d({}, this.state), \"function\" == typeof n && (n = n(d({}, t), this.props)), n && d(t, n), null != n && this.__v && (l && this._sb.push(l), S(this));\n}, m.prototype.forceUpdate = function(n) {\n    this.__v && (this.__e = !0, n && this.__h.push(n), S(this));\n}, m.prototype.render = x, i = [], r = \"function\" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, e = function(n, l) {\n    return n.__v.__b - l.__v.__b;\n}, C.__r = 0, f = 0, c = T(!1), s = T(!0), h = 0, exports.Component = m, exports.Fragment = x, exports.cloneElement = function(l, t, u) {\n    var i, o, r, e, f = d({}, l.props);\n    for(r in l.type && l.type.defaultProps && (e = l.type.defaultProps), t)\"key\" == r ? i = t[r] : \"ref\" == r ? o = t[r] : f[r] = void 0 === t[r] && void 0 !== e ? e[r] : t[r];\n    return arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : u), g(l.type, f, i || l.key, o || l.ref, null);\n}, exports.createContext = function(n, l) {\n    var t = {\n        __c: l = \"__cC\" + h++,\n        __: n,\n        Consumer: function(n, l) {\n            return n.children(l);\n        },\n        Provider: function(n) {\n            var t, u;\n            return this.getChildContext || (t = new Set, (u = {})[l] = this, this.getChildContext = function() {\n                return u;\n            }, this.componentWillUnmount = function() {\n                t = null;\n            }, this.shouldComponentUpdate = function(n) {\n                this.props.value !== n.value && t.forEach(function(n) {\n                    n.__e = !0, S(n);\n                });\n            }, this.sub = function(n) {\n                t.add(n);\n                var l = n.componentWillUnmount;\n                n.componentWillUnmount = function() {\n                    t && t.delete(n), l && l.call(n);\n                };\n            }), n.children;\n        }\n    };\n    return t.Provider.__ = t.Consumer.contextType = t;\n}, exports.createElement = _, exports.createRef = function() {\n    return {\n        current: null\n    };\n}, exports.h = _, exports.hydrate = function n(l, t) {\n    V(l, t, n);\n}, exports.isValidElement = u, exports.options = l, exports.render = V, exports.toChildArray = function n(l, t) {\n    return t = t || [], null == l || \"boolean\" == typeof l || (y(l) ? l.some(function(l) {\n        n(l, t);\n    }) : t.push(l)), t;\n}; //# sourceMappingURL=preact.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/preact@10.24.3/node_modules/preact/dist/preact.js\n");

/***/ })

};
;